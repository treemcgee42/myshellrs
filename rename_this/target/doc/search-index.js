var searchIndex = JSON.parse('{\
"stdout_tables":{"doc":"Create well-formatted tables that can be printed to <code>stdout</code>…","t":[0,3,11,11,0,3,12,12,11,11,0,3,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["tables","Table","draw","make","wrap","WrappedCell","width","content","wrap_str","pad_row","themes","Theme","TOP_LEFT_CORNER","TOP_CENTER","TOP_RIGHT_CORNER","MIDDLE_LEFT","MIDDLE_CENTER","MIDDLE_RIGHT","BOTTOM_LEFT_CORNER","BOTTOM_CENTER","BOTTOM_RIGHT_CORNER","HORIZONTAL_BORDER","VERTICAL_BORDER","heavy","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt","fmt"],"q":["stdout_tables","stdout_tables::tables","","","stdout_tables","stdout_tables::wrap","","","","","stdout_tables","stdout_tables::themes","","","","","","","","","","","","","stdout_tables::tables","","","","","","","stdout_tables::wrap","","","","","","","stdout_tables::themes","","","","","","","stdout_tables::tables","stdout_tables::wrap"],"d":["Table-related structures and operations","The representation of a table","Display the <code>Table</code> as a table by printing to <code>stdout</code>.","A way to create a table from <code>&str</code>s","Handles the wrapping needed for the tables.","Can be thought of as the cells of the table, though in …","How many characters should be displayed before inserting …","The string that is being wrapped, stored here in …","Break a string up into multiple lines and pad it …","Given a row (vector) of WrappedCell(s), pad each …","Determines the look of the table.","How themes will be represented.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,2,2,2,2,0,0,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,1,2],"f":[null,null,[[["theme",3]]],[[["vec",3],["vec",3],["vec",3]],["table",3]],null,null,null,null,[[["usize",15],["str",15]],[["str",15],["wrappedcell",3],["result",4]]],[[["vec",3],["wrappedcell",3]],[["vec",3],["wrappedcell",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["theme",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[3,"Table"],[3,"WrappedCell"],[3,"Theme"]]}\
}');
initSearch(searchIndex);